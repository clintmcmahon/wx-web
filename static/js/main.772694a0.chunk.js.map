{"version":3,"sources":["components/charts/BarChart.js","components/daily/DailyRecords.js","data/stateOptions.js","screens/Home.js","screens/About.js","components/navigation/TopNav.js","App.js","reportWebVitals.js","index.js"],"names":["ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","ChartDataLabels","BarChart","chartData","chartOptions","plugins","title","display","text","legend","position","datalabels","color","data","options","DailyRecords","selectedStation","useState","highs","setHighs","lows","setLows","isLoading","setIsLoading","dt","Date","day","getDate","toString","padStart","shortDate","getMonth","useEffect","fetchRecords","a","_query","sid","sdate","edate","elems","name","interval","duration","smry","reduce","add","n","smry_only","groupby","meta","fetch","method","headers","redirect","body","JSON","stringify","response","json","highsData","map","item","newDate","temp","date","getFullYear","sort","b","labels","record","datasets","label","backgroundColor","lowsData","Row","Col","xs","md","className","count","stateOptions","value","defaultStations","Home","selectedState","setSelectedState","stationOptions","setStationOptions","setSelectedStation","setMeta","normals","setNormals","records","setRecords","month","year","longDate","dateName","toLocaleString","dataUrl","fetchNormals","normalsQuery","sDate","eDate","high","low","recordsQuery","highTemp","highDate","lowTemp","lowDate","selectedStateChange","e","getStationsQuery","state","stationsData","filter","station","toLowerCase","includes","sids","Form","Group","controlId","Label","onChange","Control","placeholder","disabled","width","xl","About","href","target","rel","TopNav","Navbar","bg","variant","expand","Container","Brand","Toggle","Collapse","id","Nav","to","App","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.772694a0.chunk.js","sourcesContent":["import { Bar } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend, \r\n  ChartDataLabels\r\n);\r\n\r\nconst BarChart = ({ chartData, title }) => {\r\n\r\n  const chartOptions = {\r\n    plugins: {\r\n      title: {\r\n        display: false,\r\n        text: title\r\n      },\r\n      legend: {\r\n        display: false,\r\n        position: \"bottom\"\r\n      },\r\n      datalabels: {\r\n        display: true,\r\n        color: 'black'\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Bar\r\n        data={chartData}\r\n        options={chartOptions}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarChart;","import React, { useEffect, useState } from \"react\";\r\nimport BarChart from \"../charts/BarChart\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Skeleton from 'react-loading-skeleton'\r\n\r\nfunction DailyRecords({ selectedStation }) {\r\n  const [highs, setHighs] = useState(null);\r\n  const [lows, setLows] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const dt = new Date();\r\n  const day = dt.getDate().toString().padStart(2, \"0\");\r\n  const month = (dt.getMonth() + 1).toString().padStart(2, \"0\");\r\n  const shortDate = month + \"-\" + day;\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    const fetchRecords = async () => {\r\n\r\n      const _query = {\r\n        sid: selectedStation,\r\n        sdate: \"1871-01-01\",\r\n        edate: \"2021-12-31\",\r\n        elems: [{\r\n          name: \"maxt\",\r\n          interval: \"dly\",\r\n          duration: \"dly\",\r\n          smry: {\r\n            reduce: \"max\",\r\n            add: \"date\",\r\n            n: 10\r\n          },\r\n          smry_only: 1,\r\n          groupby: [\r\n            \"year\",\r\n            shortDate,\r\n            shortDate\r\n          ]\r\n        },\r\n        {\r\n          name: \"mint\",\r\n          interval: \"dly\",\r\n          duration: \"dly\",\r\n          smry: {\r\n            reduce: \"min\",\r\n            add: \"date\",\r\n            n: 10\r\n          },\r\n          smry_only: 1,\r\n          groupby: [\r\n            \"year\",\r\n            shortDate,\r\n            shortDate\r\n          ]\r\n        }],\r\n        meta: [\r\n          \"name\",\r\n          \"state\",\r\n          \"valid_daterange\"\r\n        ]\r\n      };\r\n      const url = \"https://data.rcc-acis.org/StnData\";\r\n\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        redirect: 'follow',\r\n        body: JSON.stringify(_query)\r\n      });\r\n      const data = await response.json();\r\n\r\n      let highsData = data.smry[0][0].map(item => {\r\n        var newDate = new Date(item[1]);\r\n        return { temp: item[0], date: newDate.getFullYear() }\r\n      }).sort((a, b) => a.date > b.date ? 1 : -1);;\r\n\r\n      setHighs({\r\n        labels: highsData.map((record) => record.date),\r\n        datasets: [\r\n          {\r\n            label: \"High Temperature\",\r\n            data: highsData.map((record) => record.temp),\r\n            backgroundColor: 'rgba(231, 8, 8, 0.8)',\r\n          }\r\n        ]\r\n      });\r\n\r\n      let lowsData = data.smry[1][0].map(item => {\r\n        var newDate = new Date(item[1]);\r\n        return { temp: item[0], date: newDate.getFullYear() }\r\n      }).sort((a, b) => a.date > b.date ? 1 : -1);;\r\n\r\n      setLows({\r\n        labels: lowsData.map((record) => record.date),\r\n        datasets: [\r\n          {\r\n            label: \"Low Temperature\",\r\n            data: lowsData.map((record) => record.temp),\r\n            backgroundColor: 'rgba(8, 17, 231, 0.8)',\r\n          }\r\n        ]\r\n      });\r\n\r\n      setIsLoading(false);\r\n    }\r\n    if (selectedStation) {\r\n      fetchRecords();\r\n    }\r\n  }, [selectedStation]);\r\n\r\n  return (\r\n    <Row>\r\n      <Col xs={12} md={6}>\r\n        <div className=\"card shadow mb-4\">\r\n          <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\r\n            <h6 className=\"m-0 font-weight-bold text-primary\">{`Record Highs`}</h6>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            {isLoading &&\r\n              <Skeleton count={10} />\r\n            }\r\n            {!isLoading && highs &&\r\n              <BarChart\r\n                chartData={highs} />\r\n            }\r\n          </div>\r\n        </div>\r\n\r\n      </Col>\r\n      <Col xs={12} md={6}>\r\n        <div className=\"card shadow mb-4\">\r\n          <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\r\n            <h6 className=\"m-0 font-weight-bold text-primary\">{`Record Lows`}</h6>\r\n          </div>\r\n          <div className=\"card-body\">\r\n            {isLoading &&\r\n              <Skeleton count={10} />\r\n            }\r\n            {!isLoading && lows &&\r\n              <BarChart\r\n                chartData={lows} />\r\n            }\r\n          </div>\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default DailyRecords;","export const stateOptions = [\r\n    {\r\n        label: \"Alabama\",\r\n        value: \"AL\"\r\n    },\r\n    {\r\n        label: \"Alaska\",\r\n        value: \"AK\"\r\n    },\r\n    {\r\n        label: \"American Samoa\",\r\n        value: \"AS\"\r\n    },\r\n    {\r\n        label: \"Arizona\",\r\n        value: \"AZ\"\r\n    },\r\n    {\r\n        label: \"Arkansas\",\r\n        value: \"AR\"\r\n    },\r\n    {\r\n        label: \"California\",\r\n        value: \"CA\"\r\n    },\r\n    {\r\n        label: \"Colorado\",\r\n        value: \"CO\"\r\n    },\r\n    {\r\n        label: \"Connecticut\",\r\n        value: \"CT\"\r\n    },\r\n    {\r\n        label: \"Delaware\",\r\n        value: \"DE\"\r\n    },\r\n    {\r\n        label: \"District Of Columbia\",\r\n        value: \"DC\"\r\n    },\r\n    {\r\n        label: \"Federated States Of Micronesia\",\r\n        value: \"FM\"\r\n    },\r\n    {\r\n        label: \"Florida\",\r\n        value: \"FL\"\r\n    },\r\n    {\r\n        label: \"Georgia\",\r\n        value: \"GA\"\r\n    },\r\n    {\r\n        label: \"Guam\",\r\n        value: \"GU\"\r\n    },\r\n    {\r\n        label: \"Hawaii\",\r\n        value: \"HI\"\r\n    },\r\n    {\r\n        label: \"Idaho\",\r\n        value: \"ID\"\r\n    },\r\n    {\r\n        label: \"Illinois\",\r\n        value: \"IL\"\r\n    },\r\n    {\r\n        label: \"Indiana\",\r\n        value: \"IN\"\r\n    },\r\n    {\r\n        label: \"Iowa\",\r\n        value: \"IA\"\r\n    },\r\n    {\r\n        label: \"Kansas\",\r\n        value: \"KS\"\r\n    },\r\n    {\r\n        label: \"Kentucky\",\r\n        value: \"KY\"\r\n    },\r\n    {\r\n        label: \"Louisiana\",\r\n        value: \"LA\"\r\n    },\r\n    {\r\n        label: \"Maine\",\r\n        value: \"ME\"\r\n    },\r\n    {\r\n        label: \"Marshall Islands\",\r\n        value: \"MH\"\r\n    },\r\n    {\r\n        label: \"Maryland\",\r\n        value: \"MD\"\r\n    },\r\n    {\r\n        label: \"Massachusetts\",\r\n        value: \"MA\"\r\n    },\r\n    {\r\n        label: \"Michigan\",\r\n        value: \"MI\"\r\n    },\r\n    {\r\n        label: \"Minnesota\",\r\n        value: \"MN\"\r\n    },\r\n    {\r\n        label: \"Mississippi\",\r\n        value: \"MS\"\r\n    },\r\n    {\r\n        label: \"Missouri\",\r\n        value: \"MO\"\r\n    },\r\n    {\r\n        label: \"Montana\",\r\n        value: \"MT\"\r\n    },\r\n    {\r\n        label: \"Nebraska\",\r\n        value: \"NE\"\r\n    },\r\n    {\r\n        label: \"Nevada\",\r\n        value: \"NV\"\r\n    },\r\n    {\r\n        label: \"New Hampshire\",\r\n        value: \"NH\"\r\n    },\r\n    {\r\n        label: \"New Jersey\",\r\n        value: \"NJ\"\r\n    },\r\n    {\r\n        label: \"New Mexico\",\r\n        value: \"NM\"\r\n    },\r\n    {\r\n        label: \"New York\",\r\n        value: \"NY\"\r\n    },\r\n    {\r\n        label: \"North Carolina\",\r\n        value: \"NC\"\r\n    },\r\n    {\r\n        label: \"North Dakota\",\r\n        value: \"ND\"\r\n    },\r\n    {\r\n        label: \"Northern Mariana Islands\",\r\n        value: \"MP\"\r\n    },\r\n    {\r\n        label: \"Ohio\",\r\n        value: \"OH\"\r\n    },\r\n    {\r\n        label: \"Oklahoma\",\r\n        value: \"OK\"\r\n    },\r\n    {\r\n        label: \"Oregon\",\r\n        value: \"OR\"\r\n    },\r\n    {\r\n        label: \"Palau\",\r\n        value: \"PW\"\r\n    },\r\n    {\r\n        label: \"Pennsylvania\",\r\n        value: \"PA\"\r\n    },\r\n    {\r\n        label: \"Puerto Rico\",\r\n        value: \"PR\"\r\n    },\r\n    {\r\n        label: \"Rhode Island\",\r\n        value: \"RI\"\r\n    },\r\n    {\r\n        label: \"South Carolina\",\r\n        value: \"SC\"\r\n    },\r\n    {\r\n        label: \"South Dakota\",\r\n        value: \"SD\"\r\n    },\r\n    {\r\n        label: \"Tennessee\",\r\n        value: \"TN\"\r\n    },\r\n    {\r\n        label: \"Texas\",\r\n        value: \"TX\"\r\n    },\r\n    {\r\n        label: \"Utah\",\r\n        value: \"UT\"\r\n    },\r\n    {\r\n        label: \"Vermont\",\r\n        value: \"VT\"\r\n    },\r\n    {\r\n        label: \"Virgin Islands\",\r\n        value: \"VI\"\r\n    },\r\n    {\r\n        label: \"Virginia\",\r\n        value: \"VA\"\r\n    },\r\n    {\r\n        label: \"Washington\",\r\n        value: \"WA\"\r\n    },\r\n    {\r\n        label: \"West Virginia\",\r\n        value: \"WV\"\r\n    },\r\n    {\r\n        label: \"Wisconsin\",\r\n        value: \"WI\"\r\n    },\r\n    {\r\n        label: \"Wyoming\",\r\n        value: \"WY\"\r\n    }\r\n];\r\n\r\n\r\nexport const defaultStations = [\r\n    { value: \"BRDthr 9\", label: \"Brainerd Area\" },\r\n    { value: \"DLHthr 9\", label: \"Duluth Area\" },\r\n    { value: \"HIBthr 9\", label: \"Hibbing Area\" },\r\n    { value: \"INLthr 9\", label: \"International Falls Area\" },\r\n    { value: \"MSPthr 9\", label: \"Minneapolis-St Paul Area\" },\r\n    { value: \"RSTthr 9\", label: \"Rochester Area\" },\r\n    { value: \"STCthr 9\", label: \"Saint Cloud Area\" }\r\n]","import React, { useState, useEffect } from \"react\";\r\nimport DailyRecords from \"../components/daily/DailyRecords\";\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { stateOptions, defaultStations } from \"../data/stateOptions.js\";\r\nimport Select from 'react-select';\r\nimport Skeleton from 'react-loading-skeleton'\r\nfunction Home() {\r\n    const [selectedDate, setSelectedDate] = useState(\"\");\r\n    const [selectedState, setSelectedState] = useState({ value: \"MN\", label: \"Minnesota\" });\r\n    const [stationOptions, setStationOptions] = useState(defaultStations);\r\n    const [selectedStation, setSelectedStation] = useState({ value: \"MSPthr 9\", label: \"Minneapolis-St Paul Area\" });\r\n    const [meta, setMeta] = useState(null);\r\n    const [normals, setNormals] = useState(null);\r\n    const [records, setRecords] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const loadingOption = { value: \"\", label: \"Loading stations...\" };\r\n\r\n    const dt = new Date();\r\n    const month = (dt.getMonth() + 1).toString().padStart(2, \"0\");\r\n    const day = dt.getDate().toString().padStart(2, \"0\");\r\n    const year = dt.getFullYear();\r\n    const shortDate = month + \"-\" + day;\r\n    const longDate = year + \"-\" + month + \"-\" + day;\r\n    const dateName = dt.toLocaleString('en-US', { month: 'long' }) + ' ' + day;\r\n    const dataUrl = \"https://data.rcc-acis.org/StnData\";\r\n    const metaUrl = \"https://data.rcc-acis.org/StnMeta\";\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n\r\n        const fetchNormals = async () => {\r\n            const normalsQuery = {\r\n                sid: selectedStation.value,\r\n                sDate: longDate,\r\n                eDate: longDate,\r\n                elems: [\r\n                    {\r\n                        \"name\": \"maxt\",\r\n                        \"interval\": \"dly\",\r\n                        \"duration\": \"dly\",\r\n                        \"normal\": \"1\",\r\n                        \"prec\": 0\r\n                    },\r\n                    {\r\n                        \"name\": \"mint\",\r\n                        \"interval\": \"dly\",\r\n                        \"duration\": \"dly\",\r\n                        \"normal\": \"1\",\r\n                        \"prec\": 0\r\n                    }\r\n                ]\r\n            };\r\n\r\n            const response = await fetch(dataUrl, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                redirect: 'follow',\r\n                body: JSON.stringify(normalsQuery)\r\n            });\r\n            const json = await response.json();\r\n\r\n            setMeta(json.meta);\r\n            setNormals({\r\n                date: json.data[0][0],\r\n                high: json.data[0][1],\r\n                low: json.data[0][2]\r\n            });\r\n\r\n            setIsLoading(false);\r\n        }\r\n\r\n        const fetchRecords = async () => {\r\n            const recordsQuery = {\r\n                sid: selectedStation.value,\r\n                elems: [\r\n                    {\r\n                        \"name\": \"maxt\",\r\n                        \"interval\": \"dly\",\r\n                        \"duration\": \"dly\",\r\n                        \"smry\": {\r\n                            \"reduce\": \"max\",\r\n                            \"add\": \"date\"\r\n                        },\r\n                        \"smry_only\": 1,\r\n                        \"groupby\": [\"year\", shortDate, shortDate]\r\n                    },\r\n                    {\r\n                        \"name\": \"mint\",\r\n                        \"interval\": \"dly\",\r\n                        \"duration\": \"dly\",\r\n                        \"smry\": {\r\n                            \"reduce\": \"min\", \"add\": \"date\"\r\n                        },\r\n                        \"smry_only\": 1,\r\n                        \"groupby\": [\"year\", shortDate, shortDate]\r\n                    }],\r\n                \"sid\": selectedStation.value, \"sDate\": \"por\", \"eDate\": \"por\", \"meta\": [\"name\", \"state\", \"valid_daterange\", \"sids\"]\r\n            };\r\n\r\n            const response = await fetch(dataUrl, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                redirect: 'follow',\r\n                body: JSON.stringify(recordsQuery)\r\n            });\r\n            const json = await response.json();\r\n            setRecords({\r\n                highTemp: json.smry[0][0][0],\r\n                highDate: json.smry[0][0][1] ? new Date(json.smry[0][0][1]) : \"\",\r\n                lowTemp: json.smry[1][0][0],\r\n                lowDate: json.smry[1][0][1] ? new Date(json.smry[1][0][1]) : \"\",\r\n            });\r\n\r\n            setIsLoading(false);\r\n        }\r\n\r\n        if(selectedStation)\r\n        {\r\n        fetchNormals();\r\n        fetchRecords();\r\n        }\r\n\r\n    }, [selectedStation]);\r\n\r\n    const selectedStateChange = async (e) => {\r\n        setIsLoading(true);\r\n        setSelectedState(e);\r\n        setSelectedStation(null);\r\n\r\n        const getStationsQuery = {\r\n            sdate: \"1871-01-01\",\r\n            edate: \"2021-12-31\",\r\n            meta: [\"name\", \"sids\", \"ll\"],\r\n            elems: \"maxt,mint\",\r\n            state: e.value\r\n        };\r\n\r\n        const response = await fetch(metaUrl, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            redirect: 'follow',\r\n            body: JSON.stringify(getStationsQuery)\r\n        });\r\n\r\n        const data = await response.json();\r\n        const stationsData = data.meta.filter(station => {\r\n            return station.name.toLowerCase().includes(\"area\")\r\n        }).sort((a, b) => a.name > b.name ? 1 : -1)\r\n            .map((station) => {\r\n                return { label: station.name, value: station.sids[0] }\r\n            });\r\n\r\n        setStationOptions(stationsData);\r\n        setSelectedStation(stationsData[0]);\r\n        setIsLoading(false);\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                        <Row>\r\n                            <Col md={4}>\r\n                                <Form.Label>State</Form.Label>\r\n                                <Select\r\n                                    className=\"wx-select\"\r\n                                    value={selectedState}\r\n                                    onChange={selectedStateChange}\r\n                                    options={stateOptions ? stateOptions : []}\r\n                                />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Form.Label>Station</Form.Label>\r\n                                <Select\r\n                                    className=\"wx-select\"\r\n                                    value={!isLoading ? selectedStation : loadingOption}\r\n                                    onChange={(e) => setSelectedStation(e)}\r\n                                    options={stationOptions && !isLoading ? stationOptions : []} />\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Form.Label>Date</Form.Label>\r\n                                <Form.Control placeholder={dateName} disabled />\r\n                            </Col>\r\n                        </Row>\r\n                    </Form.Group>\r\n                    <hr />\r\n                </Col>\r\n            </Row>\r\n            <div className=\"d-sm-flex align-items-center justify-content-between mb-4\">\r\n                {isLoading &&\r\n                    <h1 className=\"h3 mb-0 text-gray-800\"><Skeleton width={500} /></h1>\r\n                }\r\n                {!isLoading &&\r\n                    <h1 className=\"h3 mb-0 text-gray-800\">Historical weather for the {meta ? meta.name : \"\"}</h1>\r\n                }\r\n            </div>\r\n            <Row>\r\n                <Col xl={3} md={6}>\r\n                    <div className=\"card border-left-danger shadow h-100 py-2\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"row no-gutters align-items-center\">\r\n                                <div className=\"col mr-2\">\r\n                                    <div className=\"text-xs font-weight-bold text-danger text-uppercase mb-1\">\r\n                                        Normal High\r\n                                    </div>\r\n                                    {isLoading &&\r\n                                        <div className=\"h5 mb-0 font-weight-bold text-gray-800\"><Skeleton width={100} /></div>\r\n                                    }\r\n                                    {!isLoading &&\r\n                                        <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{normals ? `${normals.high}℉` : \"\"}</div>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"col-auto\">\r\n                                    <i className=\"fas fa-calendar fa-2x text-gray-300\"></i>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n                <Col xl={3} md={6}>\r\n                    <div className=\"card border-left-danger shadow h-100 py-2\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"row no-gutters align-items-center\">\r\n                                <div className=\"col mr-2\">\r\n                                    <div className=\"text-xs font-weight-bold text-danger text-uppercase mb-1\">\r\n                                        Record High\r\n                                    </div>\r\n                                    {isLoading && \r\n                                        <div className=\"h5 mb-0 font-weight-bold text-gray-800\"><Skeleton width={100} /></div>\r\n                                    }\r\n                                    {!isLoading &&\r\n                                        <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{records ? `${records.highTemp}℉ in ${records.highDate.getFullYear()}` : \"\"}</div>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"col-auto\">\r\n                                    <i className=\"fas fa-calendar fa-2x text-gray-300\"></i>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n                <Col xl={3} md={6}>\r\n                    <div className=\"card border-left-primary shadow h-100 py-2\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"row no-gutters align-items-center\">\r\n                                <div className=\"col mr-2\">\r\n                                    <div className=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">\r\n                                        Normal Low\r\n                                    </div>\r\n                                    {isLoading && \r\n                                        <div className=\"h5 mb-0 font-weight-bold text-gray-800\"><Skeleton width={100} /></div>\r\n                                    }\r\n                                    {!isLoading &&\r\n                                        <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{normals ? `${normals.low}℉` : \"\"}</div>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"col-auto\">\r\n                                    <i className=\"fas fa-dollar-sign fa-2x text-gray-300\"></i>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n                <Col xl={3} md={6}>\r\n                    <div className=\"card border-left-primary shadow h-100 py-2\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"row no-gutters align-items-center\">\r\n                                <div className=\"col mr-2\">\r\n                                    <div className=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">\r\n                                        Record Low\r\n                                    </div>\r\n                                    {isLoading && \r\n                                        <div className=\"h5 mb-0 font-weight-bold text-gray-800\"><Skeleton width={100} /></div>\r\n                                    }\r\n                                    {!isLoading &&\r\n                                        <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{records ? `${records.lowTemp}℉ in ${records.lowDate.getFullYear()}` : \"\"}</div>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"col-auto\">\r\n                                    <i className=\"fas fa-dollar-sign fa-2x text-gray-300\"></i>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col xs={12} className=\"mt-4\">\r\n                    <DailyRecords selectedStation={selectedStation ? selectedStation.value : null} />\r\n                </Col>\r\n            </Row>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nfunction About() {\r\n    return (\r\n        <>\r\n        <Row>\r\n            <Col xs={12}>\r\n                <div className=\"d-sm-flex align-items-center justify-content-between mb-4\">\r\n                    <h1 className=\"h3 mb-0 text-gray-800\">About</h1>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col xs={12} className=\"mt-4\">\r\n                The data for this website is sourced from the <a href=\"https://www.rcc-acis.org/aboutacis_overview.html\" target=\"_blank\" rel=\"nofollow noreferrer\">Regional Climate Centers - Applied Climate Information System</a> and the queries were built using <a href=\"https://xmacis.rcc-acis.org/\" target=\"_blank\" rel=\"nofollow noreferrer\">xmACIS2 Query Builder</a>.\r\n            </Col>\r\n        </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction TopNav() {\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n            <Container>\r\n                <Navbar.Brand href=\"/wx-web\">WX Data Explorer</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"me-auto\">\r\n                        <Link className=\"nav-link\" to=\"/wx-web\">Home</Link>\r\n                        <Link className=\"nav-link\" to=\"/wx-web/about\">About</Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default TopNav;","\r\nimport Home from \"./screens/Home\";\r\nimport About from \"./screens/About\";\r\nimport TopNav from \"./components/navigation/TopNav\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-loading-skeleton/dist/skeleton.css'\r\nimport \"./sb-admin-2.min.css\";\r\nimport './App.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Routes, Route, Link } from \"react-router-dom\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <TopNav />\r\n      <Container>\r\n        <Row>\r\n          <Col xs={12}>\r\n            <div id=\"content-wrapper\" className=\"d-flex flex-column\">\r\n              <Row>\r\n                <Col className=\"mt-4\">\r\n                  <Routes>\r\n                    <Route exact path=\"/wx-web\" element={<Home />} />\r\n                    <Route path=\"/wx-web/about\" element={<About />} />\r\n                    <Route path=\"*\" element={<Home />} />\r\n\r\n                  </Routes>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}