{"version":3,"sources":["components/charts/BarChart.js","components/daily/DailyRecords.js","data/stateOptions.js","screens/Home.js","screens/About.js","components/navigation/TopNav.js","App.js","reportWebVitals.js","index.js"],"names":["ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","ChartDataLabels","BarChart","chartData","chartOptions","plugins","title","display","text","legend","position","datalabels","color","data","options","DailyRecords","selectedStation","useState","highs","setHighs","lows","setLows","setIsLoading","dt","Date","day","getDate","toString","padStart","shortDate","getFullYear","getMonth","toLocaleString","month","useEffect","fetchRecords","a","_query","sid","sdate","edate","elems","name","interval","duration","smry","reduce","add","n","smry_only","groupby","meta","fetch","method","headers","redirect","body","JSON","stringify","response","json","highsData","map","item","newDate","temp","date","sort","b","labels","record","datasets","label","backgroundColor","lowsData","Row","Col","xs","md","className","stateOptions","value","defaultStations","Home","selectedState","setSelectedState","stationOptions","setStationOptions","setSelectedStation","setMeta","normals","setNormals","records","setRecords","isLoading","year","longDate","dateName","dataUrl","fetchNormals","normalsQuery","sDate","eDate","high","low","recordsQuery","highTemp","highDate","lowTemp","lowDate","selectedStateChange","e","getStationsQuery","state","stationsData","filter","station","toLowerCase","includes","console","log","sids","Form","Group","controlId","Label","onChange","Control","placeholder","disabled","xl","About","href","target","rel","TopNav","Navbar","bg","variant","expand","Container","Brand","Toggle","Collapse","id","Nav","to","App","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f87c2df.chunk.js","sourcesContent":["import { Bar } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend, \n  ChartDataLabels\n);\n\nconst BarChart = ({ chartData, title }) => {\n\n  const chartOptions = {\n    plugins: {\n      title: {\n        display: false,\n        text: title\n      },\n      legend: {\n        display: false,\n        position: \"bottom\"\n      },\n      datalabels: {\n        display: true,\n        color: 'black'\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Bar\n        data={chartData}\n        options={chartOptions}\n      />\n    </div>\n  );\n};\n\nexport default BarChart;","import React, { useEffect, useState } from \"react\";\nimport BarChart from \"../charts/BarChart\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction DailyRecords({ selectedStation }) {\n  const [highs, setHighs] = useState(null);\n  const [lows, setLows] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const dt = new Date();\n  const day = dt.getDate().toString().padStart(2, \"0\");\n  const year = dt.getFullYear();\n  const month = (dt.getMonth() + 1).toString().padStart(2, \"0\");\n  const shortDate = month + \"-\" + day;\n  const dateName = dt.toLocaleString('en-US', { month: 'long' }) + ' ' + day;\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchRecords = async () => {\n\n      const _query = {\n        sid: selectedStation,\n        sdate: \"1871-01-01\",\n        edate: \"2021-12-31\",\n        elems: [{\n          name: \"maxt\",\n          interval: \"dly\",\n          duration: \"dly\",\n          smry: {\n            reduce: \"max\",\n            add: \"date\",\n            n: 10\n          },\n          smry_only: 1,\n          groupby: [\n            \"year\",\n            shortDate,\n            shortDate\n          ]\n        },\n        {\n          name: \"mint\",\n          interval: \"dly\",\n          duration: \"dly\",\n          smry: {\n            reduce: \"min\",\n            add: \"date\",\n            n: 10\n          },\n          smry_only: 1,\n          groupby: [\n            \"year\",\n            shortDate,\n            shortDate\n          ]\n        }],\n        meta: [\n          \"name\",\n          \"state\",\n          \"valid_daterange\"\n        ]\n      };\n      const url = \"https://data.rcc-acis.org/StnData\";\n\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        body: JSON.stringify(_query)\n      });\n      const data = await response.json();\n\n      let highsData = data.smry[0][0].map(item => {\n        var newDate = new Date(item[1]);\n        return { temp: item[0], date: newDate.getFullYear() }\n      }).sort((a, b) => a.date > b.date ? 1 : -1);;\n\n      setHighs({\n        labels: highsData.map((record) => record.date),\n        datasets: [\n          {\n            label: \"High Temperature\",\n            data: highsData.map((record) => record.temp),\n            backgroundColor: 'rgba(231, 8, 8, 0.8)',\n          }\n        ]\n      });\n\n      let lowsData = data.smry[1][0].map(item => {\n        var newDate = new Date(item[1]);\n        return { temp: item[0], date: newDate.getFullYear() }\n      }).sort((a, b) => a.date > b.date ? 1 : -1);;\n\n      setLows({\n        labels: lowsData.map((record) => record.date),\n        datasets: [\n          {\n            label: \"Low Temperature\",\n            data: lowsData.map((record) => record.temp),\n            backgroundColor: 'rgba(8, 17, 231, 0.8)',\n          }\n        ]\n      });\n\n      setIsLoading(false);\n    }\n\n    fetchRecords();\n  }, [selectedStation]);\n\n  return (\n    <Row>\n      <Col xs={12} md={6}>\n        <div className=\"card shadow mb-4\">\n          <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n            <h6 className=\"m-0 font-weight-bold text-primary\">{`Record Highs`}</h6>\n          </div>\n          <div className=\"card-body\">\n            {highs &&\n              <BarChart\n                chartData={highs} />\n            }\n          </div>\n        </div>\n\n      </Col>\n      <Col xs={12} md={6}>\n      <div className=\"card shadow mb-4\">\n          <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n            <h6 className=\"m-0 font-weight-bold text-primary\">{`Record Lows`}</h6>\n          </div>\n          <div className=\"card-body\">\n            {lows &&\n              <BarChart\n                chartData={lows} />\n            }\n          </div>\n        </div>\n      </Col>\n    </Row>\n  );\n}\n\nexport default DailyRecords;","export const stateOptions = [\n    {\n        label: \"Alabama\",\n        value: \"AL\"\n    },\n    {\n        label: \"Alaska\",\n        value: \"AK\"\n    },\n    {\n        label: \"American Samoa\",\n        value: \"AS\"\n    },\n    {\n        label: \"Arizona\",\n        value: \"AZ\"\n    },\n    {\n        label: \"Arkansas\",\n        value: \"AR\"\n    },\n    {\n        label: \"California\",\n        value: \"CA\"\n    },\n    {\n        label: \"Colorado\",\n        value: \"CO\"\n    },\n    {\n        label: \"Connecticut\",\n        value: \"CT\"\n    },\n    {\n        label: \"Delaware\",\n        value: \"DE\"\n    },\n    {\n        label: \"District Of Columbia\",\n        value: \"DC\"\n    },\n    {\n        label: \"Federated States Of Micronesia\",\n        value: \"FM\"\n    },\n    {\n        label: \"Florida\",\n        value: \"FL\"\n    },\n    {\n        label: \"Georgia\",\n        value: \"GA\"\n    },\n    {\n        label: \"Guam\",\n        value: \"GU\"\n    },\n    {\n        label: \"Hawaii\",\n        value: \"HI\"\n    },\n    {\n        label: \"Idaho\",\n        value: \"ID\"\n    },\n    {\n        label: \"Illinois\",\n        value: \"IL\"\n    },\n    {\n        label: \"Indiana\",\n        value: \"IN\"\n    },\n    {\n        label: \"Iowa\",\n        value: \"IA\"\n    },\n    {\n        label: \"Kansas\",\n        value: \"KS\"\n    },\n    {\n        label: \"Kentucky\",\n        value: \"KY\"\n    },\n    {\n        label: \"Louisiana\",\n        value: \"LA\"\n    },\n    {\n        label: \"Maine\",\n        value: \"ME\"\n    },\n    {\n        label: \"Marshall Islands\",\n        value: \"MH\"\n    },\n    {\n        label: \"Maryland\",\n        value: \"MD\"\n    },\n    {\n        label: \"Massachusetts\",\n        value: \"MA\"\n    },\n    {\n        label: \"Michigan\",\n        value: \"MI\"\n    },\n    {\n        label: \"Minnesota\",\n        value: \"MN\"\n    },\n    {\n        label: \"Mississippi\",\n        value: \"MS\"\n    },\n    {\n        label: \"Missouri\",\n        value: \"MO\"\n    },\n    {\n        label: \"Montana\",\n        value: \"MT\"\n    },\n    {\n        label: \"Nebraska\",\n        value: \"NE\"\n    },\n    {\n        label: \"Nevada\",\n        value: \"NV\"\n    },\n    {\n        label: \"New Hampshire\",\n        value: \"NH\"\n    },\n    {\n        label: \"New Jersey\",\n        value: \"NJ\"\n    },\n    {\n        label: \"New Mexico\",\n        value: \"NM\"\n    },\n    {\n        label: \"New York\",\n        value: \"NY\"\n    },\n    {\n        label: \"North Carolina\",\n        value: \"NC\"\n    },\n    {\n        label: \"North Dakota\",\n        value: \"ND\"\n    },\n    {\n        label: \"Northern Mariana Islands\",\n        value: \"MP\"\n    },\n    {\n        label: \"Ohio\",\n        value: \"OH\"\n    },\n    {\n        label: \"Oklahoma\",\n        value: \"OK\"\n    },\n    {\n        label: \"Oregon\",\n        value: \"OR\"\n    },\n    {\n        label: \"Palau\",\n        value: \"PW\"\n    },\n    {\n        label: \"Pennsylvania\",\n        value: \"PA\"\n    },\n    {\n        label: \"Puerto Rico\",\n        value: \"PR\"\n    },\n    {\n        label: \"Rhode Island\",\n        value: \"RI\"\n    },\n    {\n        label: \"South Carolina\",\n        value: \"SC\"\n    },\n    {\n        label: \"South Dakota\",\n        value: \"SD\"\n    },\n    {\n        label: \"Tennessee\",\n        value: \"TN\"\n    },\n    {\n        label: \"Texas\",\n        value: \"TX\"\n    },\n    {\n        label: \"Utah\",\n        value: \"UT\"\n    },\n    {\n        label: \"Vermont\",\n        value: \"VT\"\n    },\n    {\n        label: \"Virgin Islands\",\n        value: \"VI\"\n    },\n    {\n        label: \"Virginia\",\n        value: \"VA\"\n    },\n    {\n        label: \"Washington\",\n        value: \"WA\"\n    },\n    {\n        label: \"West Virginia\",\n        value: \"WV\"\n    },\n    {\n        label: \"Wisconsin\",\n        value: \"WI\"\n    },\n    {\n        label: \"Wyoming\",\n        value: \"WY\"\n    }\n];\n\n\nexport const defaultStations = [\n    { value: \"BRDthr 9\", label: \"Brainerd Area\" },\n    { value: \"DLHthr 9\", label: \"Duluth Area\" },\n    { value: \"HIBthr 9\", label: \"Hibbing Area\" },\n    { value: \"INLthr 9\", label: \"International Falls Area\" },\n    { value: \"MSPthr 9\", label: \"Minneapolis-St Paul Area\" },\n    { value: \"RSTthr 9\", label: \"Rochester Area\" },\n    { value: \"STCthr 9\", label: \"Saint Cloud Area\" }\n]","import React, { useState, useEffect } from \"react\";\nimport DailyRecords from \"../components/daily/DailyRecords\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from \"react-bootstrap/Form\";\nimport { stateOptions, defaultStations } from \"../data/stateOptions.js\";\nimport Select from 'react-select';\n\nfunction Home() {\n    const [selectedDate, setSelectedDate] = useState(\"\");\n    const [selectedState, setSelectedState] = useState({ value: \"MN\", label: \"Minnesota\" });\n    const [stationOptions, setStationOptions] = useState(defaultStations);\n    const [selectedStation, setSelectedStation] = useState({ value: \"MSPthr 9\", label: \"Minneapolis-St Paul Area\" });\n    const [meta, setMeta] = useState(null);\n    const [normals, setNormals] = useState(null);\n    const [records, setRecords] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const loadingOption = { value: \"\", label: \"Loading stations...\" };\n\n    const dt = new Date();\n    const month = (dt.getMonth() + 1).toString().padStart(2, \"0\");\n    const day = dt.getDate().toString().padStart(2, \"0\");\n    const year = dt.getFullYear();\n    const shortDate = month + \"-\" + day;\n    const longDate = year + \"-\" + month + \"-\" + day;\n    const dateName = dt.toLocaleString('en-US', { month: 'long' }) + ' ' + day;\n    const dataUrl = \"https://data.rcc-acis.org/StnData\";\n    const metaUrl = \"https://data.rcc-acis.org/StnMeta\";\n\n    useEffect(() => {\n        setIsLoading(true);\n\n        const fetchNormals = async () => {\n            const normalsQuery = {\n                sid: selectedStation.value,\n                sDate: longDate,\n                eDate: longDate,\n                elems: [\n                    {\n                        \"name\": \"maxt\",\n                        \"interval\": \"dly\",\n                        \"duration\": \"dly\",\n                        \"normal\": \"1\",\n                        \"prec\": 0\n                    },\n                    {\n                        \"name\": \"mint\",\n                        \"interval\": \"dly\",\n                        \"duration\": \"dly\",\n                        \"normal\": \"1\",\n                        \"prec\": 0\n                    }\n                ]\n            };\n\n            const response = await fetch(dataUrl, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                redirect: 'follow',\n                body: JSON.stringify(normalsQuery)\n            });\n            const json = await response.json();\n\n            setMeta(json.meta);\n            setNormals({\n                date: json.data[0][0],\n                high: json.data[0][1],\n                low: json.data[0][2]\n            });\n\n            setIsLoading(false);\n        }\n\n        const fetchRecords = async () => {\n            const recordsQuery = {\n                sid: selectedStation.value,\n                elems: [\n                    {\n                        \"name\": \"maxt\",\n                        \"interval\": \"dly\",\n                        \"duration\": \"dly\",\n                        \"smry\": {\n                            \"reduce\": \"max\",\n                            \"add\": \"date\"\n                        },\n                        \"smry_only\": 1,\n                        \"groupby\": [\"year\", shortDate, shortDate]\n                    },\n                    {\n                        \"name\": \"mint\",\n                        \"interval\": \"dly\",\n                        \"duration\": \"dly\",\n                        \"smry\": {\n                            \"reduce\": \"min\", \"add\": \"date\"\n                        },\n                        \"smry_only\": 1,\n                        \"groupby\": [\"year\", shortDate, shortDate]\n                    }],\n                \"sid\": selectedStation.value, \"sDate\": \"por\", \"eDate\": \"por\", \"meta\": [\"name\", \"state\", \"valid_daterange\", \"sids\"]\n            };\n\n        const response = await fetch(dataUrl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            redirect: 'follow',\n            body: JSON.stringify(recordsQuery)\n        });\n        const json = await response.json();\n        setRecords({\n            highTemp: json.smry[0][0][0],\n            highDate: json.smry[0][0][1] ? new Date(json.smry[0][0][1]) : \"\",\n            lowTemp: json.smry[1][0][0],\n            lowDate: json.smry[1][0][1] ? new Date(json.smry[1][0][1]) : \"\",\n        });\n\n        setIsLoading(false);\n    }\n\n        fetchNormals();\n    fetchRecords();\n\n}, [selectedStation]);\n\nconst selectedStateChange = async (e) => {\n    setIsLoading(true);\n    setSelectedState(e);\n\n    const getStationsQuery = {\n        sdate: \"1871-01-01\",\n        edate: \"2021-12-31\",\n        meta: [\"name\", \"sids\", \"ll\"],\n        elems: \"maxt,mint\",\n        state: e.value\n    };\n\n    const response = await fetch(metaUrl, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        body: JSON.stringify(getStationsQuery)\n    });\n\n    const data = await response.json();\n    const stationsData = data.meta.filter(station => {\n        return station.name.toLowerCase().includes(\"area\")\n    }).sort((a, b) => a.name > b.name ? 1 : -1)\n        .map((station) => {\n            console.log(station)\n            return { label: station.name, value: station.sids[0] }\n        });\n\n    setStationOptions(stationsData);\n    setSelectedStation(stationsData[0]);\n    setIsLoading(false);\n\n}\n\nreturn (\n    <>\n        <Row>\n            <Col xs={12}>\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                    <Row>\n                        <Col md={4}>\n                            <Form.Label>State</Form.Label>\n                            <Select\n                                className=\"wx-select\"\n                                value={selectedState}\n                                onChange={selectedStateChange}\n                                options={stateOptions ? stateOptions : []}\n                            />\n                        </Col>\n                        <Col md={4}>\n                            <Form.Label>Station</Form.Label>\n                            <Select\n                                className=\"wx-select\"\n                                value={!isLoading ? selectedStation : loadingOption}\n                                onChange={(e) => setSelectedStation(e)}\n                                options={stationOptions && !isLoading ? stationOptions : []} />\n                        </Col>\n                        <Col md={4}>\n                            <Form.Label>Date</Form.Label>\n                            <Form.Control placeholder={dateName} disabled />\n                        </Col>\n                    </Row>\n                </Form.Group>\n                <hr />\n            </Col>\n        </Row>\n        <div className=\"d-sm-flex align-items-center justify-content-between mb-4\">\n            <h1 className=\"h3 mb-0 text-gray-800\">Historical weather for the {meta ? meta.name : \"\"}</h1>\n        </div>\n        <Row>\n            <Col xl={3} md={6}>\n                <div className=\"card border-left-danger shadow h-100 py-2\">\n                    <div className=\"card-body\">\n                        <div className=\"row no-gutters align-items-center\">\n                            <div className=\"col mr-2\">\n                                <div className=\"text-xs font-weight-bold text-danger text-uppercase mb-1\">\n                                    Normal High\n                                </div>\n                                <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{normals ? `${normals.high}℉` : \"\"}</div>\n                            </div>\n                            <div className=\"col-auto\">\n                                <i className=\"fas fa-calendar fa-2x text-gray-300\"></i>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Col>\n            <Col xl={3} md={6}>\n                <div className=\"card border-left-danger shadow h-100 py-2\">\n                    <div className=\"card-body\">\n                        <div className=\"row no-gutters align-items-center\">\n                            <div className=\"col mr-2\">\n                                <div className=\"text-xs font-weight-bold text-danger text-uppercase mb-1\">\n                                    Record High</div>\n                                <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{records ? `${records.highTemp}℉ in ${records.highDate.getFullYear()}` : \"\"}</div>\n                            </div>\n                            <div className=\"col-auto\">\n                                <i className=\"fas fa-calendar fa-2x text-gray-300\"></i>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Col>\n            <Col xl={3} md={6}>\n                <div className=\"card border-left-primary shadow h-100 py-2\">\n                    <div className=\"card-body\">\n                        <div className=\"row no-gutters align-items-center\">\n                            <div className=\"col mr-2\">\n                                <div className=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">\n                                    Normal Low</div>\n                                <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{normals ? `${normals.low}℉` : \"\"}</div>\n                            </div>\n                            <div className=\"col-auto\">\n                                <i className=\"fas fa-dollar-sign fa-2x text-gray-300\"></i>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Col>\n            <Col xl={3} md={6}>\n                <div className=\"card border-left-primary shadow h-100 py-2\">\n                    <div className=\"card-body\">\n                        <div className=\"row no-gutters align-items-center\">\n                            <div className=\"col mr-2\">\n                                <div className=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">\n                                    Record Low</div>\n                                <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{records ? `${records.lowTemp}℉ in ${records.lowDate.getFullYear()}` : \"\"}</div>\n                            </div>\n                            <div className=\"col-auto\">\n                                <i className=\"fas fa-dollar-sign fa-2x text-gray-300\"></i>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Col>\n        </Row>\n        <Row>\n            <Col xs={12} className=\"mt-4\">\n                <DailyRecords selectedStation={selectedStation.value} />\n            </Col>\n        </Row>\n\n    </>\n)\n}\n\nexport default Home;","import Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction About() {\n    return (\n        <>\n        <Row>\n            <Col xs={12}>\n                <div className=\"d-sm-flex align-items-center justify-content-between mb-4\">\n                    <h1 className=\"h3 mb-0 text-gray-800\">About</h1>\n                </div>\n            </Col>\n        </Row>\n        <Row>\n            <Col xs={12} className=\"mt-4\">\n                The data for this website is sourced from the <a href=\"https://www.rcc-acis.org/aboutacis_overview.html\" target=\"_blank\" rel=\"nofollow noreferrer\">Regional Climate Centers - Applied Climate Information System</a> and the queries were built using <a href=\"https://xmacis.rcc-acis.org/\" target=\"_blank\" rel=\"nofollow noreferrer\">xmACIS2 Query Builder</a>.\n            </Col>\n        </Row>\n        </>\n    )\n}\n\nexport default About;","import React from \"react\";\nimport Navbar from 'react-bootstrap/Navbar';\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport {Link} from \"react-router-dom\";\n\nfunction TopNav() {\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n            <Container>\n                <Navbar.Brand href=\"/wx-web\">WX Data Explorer</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"me-auto\">\n                        <Link className=\"nav-link\" to=\"/wx-web\">Home</Link>\n                        <Link className=\"nav-link\" to=\"/wx-web/about\">About</Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    )\n}\n\nexport default TopNav;","\nimport Home from \"./screens/Home\";\nimport About from \"./screens/About\";\nimport TopNav from \"./components/navigation/TopNav\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./sb-admin-2.min.css\";\nimport './App.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { Routes, Route, Link } from \"react-router-dom\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TopNav />\n      <Container>\n        <Row>\n          <Col className=\"mt-4\">\n            <Routes>\n              <Route exact path=\"/wx-web\" element={<Home />} />\n              <Route path=\"/wx-web/about\" element={<About />} />\n              <Route path=\"*\" element={<Home />} />\n\n            </Routes>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}