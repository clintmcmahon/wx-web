{"version":3,"sources":["components/charts/BarChart.js","components/daily/DailyRecords.js","data/stateOptions.js","screens/Home.js","screens/About.js","components/navigation/TopNav.js","App.js","reportWebVitals.js","index.js"],"names":["ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","ChartDataLabels","BarChart","chartData","chartOptions","plugins","title","display","text","legend","position","datalabels","color","data","options","DailyRecords","selectedStation","selectedDate","useState","highs","setHighs","lows","setLows","isLoading","setIsLoading","day","getDate","toString","padStart","shortDate","getMonth","dateName","toLocaleString","month","useEffect","fetchRecords","a","_query","sid","sdate","edate","elems","name","interval","duration","smry","reduce","add","n","smry_only","groupby","meta","fetch","method","headers","redirect","body","JSON","stringify","response","json","highsData","map","item","newDate","Date","temp","date","getFullYear","labels","record","datasets","label","backgroundColor","lowsData","Row","Col","xs","md","className","count","stateOptions","value","defaultStations","Home","setSelectedDate","setDateName","selectedState","setSelectedState","stationOptions","setStationOptions","setSelectedStation","setMeta","normals","setNormals","records","setRecords","dataUrl","year","longDate","fetchNormals","normalsQuery","sDate","eDate","high","low","recordsQuery","highTemp","highDate","lowTemp","lowDate","coldHigh","coldDate","warmLow","warmDate","selectedStateChange","e","getStationsQuery","stationsData","filter","station","toLowerCase","includes","sort","b","sids","Form","Group","controlId","Label","onChange","selected","width","s","About","href","target","rel","TopNav","Navbar","bg","variant","expand","Container","Brand","Toggle","Collapse","id","Nav","to","App","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38dc3f1b.chunk.js","sourcesContent":["import { Bar } from \"react-chartjs-2\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend, \n  ChartDataLabels\n);\n\nconst BarChart = ({ chartData, title }) => {\n\n  const chartOptions = {\n    plugins: {\n      title: {\n        display: false,\n        text: title\n      },\n      legend: {\n        display: false,\n        position: \"bottom\"\n      },\n      datalabels: {\n        display: true,\n        color: 'black'\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Bar\n        data={chartData}\n        options={chartOptions}\n      />\n    </div>\n  );\n};\n\nexport default BarChart;","import React, { useEffect, useState } from \"react\";\nimport BarChart from \"../charts/BarChart\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Skeleton from 'react-loading-skeleton'\n\nfunction DailyRecords({ selectedStation, selectedDate }) {\n  const [highs, setHighs] = useState(null);\n  const [lows, setLows] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const day = selectedDate.getDate().toString().padStart(2, \"0\");\n  const month = (selectedDate.getMonth() + 1).toString().padStart(2, \"0\");\n  const shortDate = month + \"-\" + day;\n  const dateName = selectedDate.toLocaleString('en-US', { month: 'long' }) + ' ' + day;\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchRecords = async () => {\n\n      const _query = {\n        sid: selectedStation,\n        sdate: \"1871-01-01\",\n        edate: \"2021-12-31\",\n        elems: [{\n          name: \"maxt\",\n          interval: \"dly\",\n          duration: \"dly\",\n          smry: {\n            reduce: \"max\",\n            add: \"date\",\n            n: 10\n          },\n          smry_only: 1,\n          groupby: [\n            \"year\",\n            shortDate,\n            shortDate\n          ]\n        },\n        {\n          name: \"mint\",\n          interval: \"dly\",\n          duration: \"dly\",\n          smry: {\n            reduce: \"min\",\n            add: \"date\",\n            n: 10\n          },\n          smry_only: 1,\n          groupby: [\n            \"year\",\n            shortDate,\n            shortDate\n          ]\n        }],\n        meta: [\n          \"name\",\n          \"state\",\n          \"valid_daterange\"\n        ]\n      };\n\n      const url = \"https://data.rcc-acis.org/StnData\";\n\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        body: JSON.stringify(_query)\n      });\n\n      const data = await response.json();\n\n      let highsData = data.smry[0][0].map(item => {\n        var newDate = new Date(item[1]);\n        return { temp: item[0], date: newDate.getFullYear() }\n      });//.sort((a, b) => a.date > b.date ? 1 : -1);\n\n      setHighs({\n        labels: highsData.map((record) => record.date),\n        datasets: [\n          {\n            label: \"High Temperature\",\n            data: highsData.map((record) => record.temp),\n            backgroundColor: 'rgba(231, 8, 8, 0.8)',\n          }\n        ]\n      });\n\n      let lowsData = data.smry[1][0].map(item => {\n        var newDate = new Date(item[1]);\n        return { temp: item[0], date: newDate.getFullYear() }\n      });//.sort((a, b) => a.date > b.date ? 1 : -1);;\n\n      setLows({\n        labels: lowsData.map((record) => record.date),\n        datasets: [\n          {\n            label: \"Low Temperature\",\n            data: lowsData.map((record) => record.temp),\n            backgroundColor: 'rgba(8, 17, 231, 0.8)',\n          }\n        ]\n      });\n\n      setIsLoading(false);\n    }\n    if (selectedStation) {\n      fetchRecords();\n    }\n  }, [selectedStation, selectedDate]);\n\n  return (\n    <Row>\n      <Col xs={12} md={6}>\n        <div className=\"card shadow mb-4\">\n          <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n            <h6 className=\"m-0 font-weight-bold text-primary\">{`All time record highs for ${dateName}`}</h6>\n          </div>\n          <div className=\"card-body\">\n            {isLoading &&\n              <Skeleton count={10} />\n            }\n            {!isLoading && highs &&\n              <BarChart\n                chartData={highs} />\n            }\n          </div>\n        </div>\n\n      </Col>\n      <Col xs={12} md={6}>\n        <div className=\"card shadow mb-4\">\n          <div className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\n            <h6 className=\"m-0 font-weight-bold text-primary\">{`All time record lows for ${dateName}`}</h6>\n          </div>\n          <div className=\"card-body\">\n            {isLoading &&\n              <Skeleton count={10} />\n            }\n            {!isLoading && lows &&\n              <BarChart\n                chartData={lows} />\n            }\n          </div>\n        </div>\n      </Col>\n    </Row>\n  );\n}\n\nexport default DailyRecords;","export const stateOptions = [\n    {\n        label: \"Alabama\",\n        value: \"AL\"\n    },\n    {\n        label: \"Alaska\",\n        value: \"AK\"\n    },\n    {\n        label: \"American Samoa\",\n        value: \"AS\"\n    },\n    {\n        label: \"Arizona\",\n        value: \"AZ\"\n    },\n    {\n        label: \"Arkansas\",\n        value: \"AR\"\n    },\n    {\n        label: \"California\",\n        value: \"CA\"\n    },\n    {\n        label: \"Colorado\",\n        value: \"CO\"\n    },\n    {\n        label: \"Connecticut\",\n        value: \"CT\"\n    },\n    {\n        label: \"Delaware\",\n        value: \"DE\"\n    },\n    {\n        label: \"District Of Columbia\",\n        value: \"DC\"\n    },\n    {\n        label: \"Federated States Of Micronesia\",\n        value: \"FM\"\n    },\n    {\n        label: \"Florida\",\n        value: \"FL\"\n    },\n    {\n        label: \"Georgia\",\n        value: \"GA\"\n    },\n    {\n        label: \"Guam\",\n        value: \"GU\"\n    },\n    {\n        label: \"Hawaii\",\n        value: \"HI\"\n    },\n    {\n        label: \"Idaho\",\n        value: \"ID\"\n    },\n    {\n        label: \"Illinois\",\n        value: \"IL\"\n    },\n    {\n        label: \"Indiana\",\n        value: \"IN\"\n    },\n    {\n        label: \"Iowa\",\n        value: \"IA\"\n    },\n    {\n        label: \"Kansas\",\n        value: \"KS\"\n    },\n    {\n        label: \"Kentucky\",\n        value: \"KY\"\n    },\n    {\n        label: \"Louisiana\",\n        value: \"LA\"\n    },\n    {\n        label: \"Maine\",\n        value: \"ME\"\n    },\n    {\n        label: \"Marshall Islands\",\n        value: \"MH\"\n    },\n    {\n        label: \"Maryland\",\n        value: \"MD\"\n    },\n    {\n        label: \"Massachusetts\",\n        value: \"MA\"\n    },\n    {\n        label: \"Michigan\",\n        value: \"MI\"\n    },\n    {\n        label: \"Minnesota\",\n        value: \"MN\"\n    },\n    {\n        label: \"Mississippi\",\n        value: \"MS\"\n    },\n    {\n        label: \"Missouri\",\n        value: \"MO\"\n    },\n    {\n        label: \"Montana\",\n        value: \"MT\"\n    },\n    {\n        label: \"Nebraska\",\n        value: \"NE\"\n    },\n    {\n        label: \"Nevada\",\n        value: \"NV\"\n    },\n    {\n        label: \"New Hampshire\",\n        value: \"NH\"\n    },\n    {\n        label: \"New Jersey\",\n        value: \"NJ\"\n    },\n    {\n        label: \"New Mexico\",\n        value: \"NM\"\n    },\n    {\n        label: \"New York\",\n        value: \"NY\"\n    },\n    {\n        label: \"North Carolina\",\n        value: \"NC\"\n    },\n    {\n        label: \"North Dakota\",\n        value: \"ND\"\n    },\n    {\n        label: \"Northern Mariana Islands\",\n        value: \"MP\"\n    },\n    {\n        label: \"Ohio\",\n        value: \"OH\"\n    },\n    {\n        label: \"Oklahoma\",\n        value: \"OK\"\n    },\n    {\n        label: \"Oregon\",\n        value: \"OR\"\n    },\n    {\n        label: \"Palau\",\n        value: \"PW\"\n    },\n    {\n        label: \"Pennsylvania\",\n        value: \"PA\"\n    },\n    {\n        label: \"Puerto Rico\",\n        value: \"PR\"\n    },\n    {\n        label: \"Rhode Island\",\n        value: \"RI\"\n    },\n    {\n        label: \"South Carolina\",\n        value: \"SC\"\n    },\n    {\n        label: \"South Dakota\",\n        value: \"SD\"\n    },\n    {\n        label: \"Tennessee\",\n        value: \"TN\"\n    },\n    {\n        label: \"Texas\",\n        value: \"TX\"\n    },\n    {\n        label: \"Utah\",\n        value: \"UT\"\n    },\n    {\n        label: \"Vermont\",\n        value: \"VT\"\n    },\n    {\n        label: \"Virgin Islands\",\n        value: \"VI\"\n    },\n    {\n        label: \"Virginia\",\n        value: \"VA\"\n    },\n    {\n        label: \"Washington\",\n        value: \"WA\"\n    },\n    {\n        label: \"West Virginia\",\n        value: \"WV\"\n    },\n    {\n        label: \"Wisconsin\",\n        value: \"WI\"\n    },\n    {\n        label: \"Wyoming\",\n        value: \"WY\"\n    }\n];\n\n\nexport const defaultStations = [\n    { value: \"BRDthr 9\", label: \"Brainerd Area\" },\n    { value: \"DLHthr 9\", label: \"Duluth Area\" },\n    { value: \"HIBthr 9\", label: \"Hibbing Area\" },\n    { value: \"INLthr 9\", label: \"International Falls Area\" },\n    { value: \"MSPthr 9\", label: \"Minneapolis-St Paul Area\" },\n    { value: \"RSTthr 9\", label: \"Rochester Area\" },\n    { value: \"STCthr 9\", label: \"Saint Cloud Area\" }\n]","import React, { useState, useEffect } from \"react\";\nimport DailyRecords from \"../components/daily/DailyRecords\";\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from \"react-bootstrap/Form\";\nimport { stateOptions, defaultStations } from \"../data/stateOptions.js\";\nimport Select from 'react-select';\nimport Skeleton from 'react-loading-skeleton';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nfunction Home() {\n    const [selectedDate, setSelectedDate] = useState(new Date());\n    const [dateName, setDateName] = useState(\"\");\n    const [selectedState, setSelectedState] = useState({ value: \"MN\", label: \"Minnesota\" });\n    const [stationOptions, setStationOptions] = useState(defaultStations);\n    const [selectedStation, setSelectedStation] = useState({ value: \"MSPthr 9\", label: \"Minneapolis-St Paul Area\" });\n    const [meta, setMeta] = useState(null);\n    const [normals, setNormals] = useState(null);\n    const [records, setRecords] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const loadingOption = { value: \"\", label: \"Getting stations from ACIS...\" };\n\n    const dataUrl = \"https://data.rcc-acis.org/StnData\";\n    const metaUrl = \"https://data.rcc-acis.org/StnMeta\";\n\n    //const dateName = selectedDate.toLocaleString('en-US', { month: 'long' }) + ' ' + day;\n\n    useEffect(() => {\n        setIsLoading(true);\n\n        const month = (selectedDate.getMonth() + 1).toString().padStart(2, \"0\");\n        const day = selectedDate.getDate().toString().padStart(2, \"0\");\n        const year = selectedDate.getFullYear();\n        const shortDate = month + \"-\" + day;\n        const longDate = year + \"-\" + month + \"-\" + day;\n        const dateName = selectedDate.toLocaleString('en-US', { month: 'long' }) + ' ' + day;\n        setDateName(dateName);\n\n        const fetchNormals = async () => {\n\n            const normalsQuery = {\n                sid: selectedStation.value,\n                sDate: longDate,\n                eDate: longDate,\n                elems: [\n                    {\n                        \"name\": \"maxt\",\n                        \"interval\": \"dly\",\n                        \"duration\": \"dly\",\n                        \"normal\": \"1\",\n                        \"prec\": 0\n                    },\n                    {\n                        \"name\": \"mint\",\n                        \"interval\": \"dly\",\n                        \"duration\": \"dly\",\n                        \"normal\": \"1\",\n                        \"prec\": 0\n                    }\n                ]\n            };\n\n            const response = await fetch(dataUrl, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                redirect: 'follow',\n                body: JSON.stringify(normalsQuery)\n            });\n            const json = await response.json();\n\n            setMeta(json.meta);\n            setNormals({\n                date: json.data[0][0],\n                high: json.data[0][1],\n                low: json.data[0][2]\n            });\n\n            setIsLoading(false);\n        }\n\n        const fetchRecords = async () => {\n            const recordsQuery = {\n                sid: selectedStation.value,\n                elems: [\n                    {\n                        \"name\": \"maxt\",\n                        \"interval\": \"dly\",\n                        \"duration\": \"dly\",\n                        \"smry\": {\n                            \"reduce\": \"max\",\n                            \"add\": \"date\"\n                        },\n                        \"smry_only\": 1,\n                        \"groupby\": [\"year\", shortDate, shortDate]\n                    },\n                    {\n                        \"name\": \"mint\",\n                        \"interval\": \"dly\",\n                        \"duration\": \"dly\",\n                        \"smry\": {\n                            \"reduce\": \"min\", \"add\": \"date\"\n                        },\n                        \"smry_only\": 1,\n                        \"groupby\": [\"year\", shortDate, shortDate]\n                    },\n                    {\n                        \"name\": \"maxt\",\n                        \"interval\": \"dly\",\n                        \"duration\": \"dly\",\n                        \"smry\": {\n                            \"reduce\": \"min\", \"add\": \"date\"\n                        },\n                        \"smry_only\": 1,\n                        \"groupby\": [\"year\", shortDate, shortDate]\n                    },\n                    {\n                        \"name\": \"mint\",\n                        \"interval\": \"dly\",\n                        \"duration\": \"dly\",\n                        \"smry\": {\n                            \"reduce\": \"max\", \"add\": \"date\"\n                        },\n                        \"smry_only\": 1,\n                        \"groupby\": [\"year\", shortDate, shortDate]\n                    },\n                    \n                ],\n                \"sDate\": \"por\", \n                \"eDate\": \"por\", \n                \"meta\": [\"name\", \"state\", \"valid_daterange\", \"sids\"]\n            };\n\n            const response = await fetch(dataUrl, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                redirect: 'follow',\n                body: JSON.stringify(recordsQuery)\n            });\n            const json = await response.json();\n\n            setRecords({\n                highTemp: json.smry[0][0][0],\n                highDate: json.smry[0][0][1] ? new Date(json.smry[0][0][1]) : \"\",\n                lowTemp: json.smry[1][0][0],\n                lowDate: json.smry[1][0][1] ? new Date(json.smry[1][0][1]) : \"\",\n                coldHigh: json.smry[2][0][0],\n                coldDate: json.smry[2][0][1] ? new Date(json.smry[2][0][1]) : \"\",\n                warmLow: json.smry[3][0][0],\n                warmDate: json.smry[3][0][1] ? new Date(json.smry[3][0][1]) : \"\"\n            });\n\n            setIsLoading(false);\n        }\n\n        if (selectedStation) {\n            fetchNormals();\n            fetchRecords();\n        }\n\n    }, [selectedStation, selectedDate]);\n\n    const selectedStateChange = async (e) => {\n        setIsLoading(true);\n        setSelectedState(e);\n        setSelectedStation(null);\n\n        const getStationsQuery = {\n            \"elems\": \"maxt,mint\",\n            \"sdate\": \"1871-01-01\",\n            \"edate\": \"2021-12-31\",\n            \"state\": e.value\n        };\n\n        const response = await fetch(metaUrl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            redirect: 'follow',\n            body: JSON.stringify(getStationsQuery)\n        });\n\n        const data = await response.json();\n\n        const stationsData = data.meta.filter(station => {\n            return station.name.toLowerCase().includes(\"area\")\n        }).sort((a, b) => a.name > b.name ? 1 : -1)\n            .map((station) => {\n                return { label: station.name, value: station.sids[0] }\n            });\n\n        setStationOptions(stationsData);\n        setSelectedStation(stationsData[0]);\n        setIsLoading(false);\n\n    }\n\n    const selectedDateChange = (date) => {\n        setSelectedDate(date)\n    }\n\n    return (\n        <>\n            <Row>\n                <Col xs={12}>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                        <Row>\n                            <Col md={4}>\n                                <Form.Label>State</Form.Label>\n                                <Select\n                                    className=\"wx-select\"\n                                    value={selectedState}\n                                    onChange={selectedStateChange}\n                                    options={stateOptions ? stateOptions : []}\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Label>Weather Station/Area</Form.Label>\n                                <Select\n                                    className=\"wx-select\"\n                                    value={!isLoading ? selectedStation : loadingOption}\n                                    onChange={(e) => setSelectedStation(e)}\n                                    options={stationOptions && !isLoading ? stationOptions : []} />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Label>Date</Form.Label>\n                                <DatePicker className=\"form-control\" selected={selectedDate} onChange={selectedDateChange} />\n                            </Col>\n                        </Row>\n                    </Form.Group>\n                    <hr />\n                </Col>\n            </Row>\n            <div className=\"d-sm-flex align-items-center justify-content-between mb-4\">\n                {isLoading &&\n                    <h1 className=\"h3 mb-0 text-gray-800\"><Skeleton width={500} /></h1>\n                }\n                {!isLoading &&\n                    <h1 className=\"h3 mb-0 text-gray-800\">{`Record temperatures for ${dateName}`}</h1>\n                }\n            </div>\n            <Row>\n                <Col s={6} md={4} className=\"mb-2\">\n                    <div className=\"card border-left-danger shadow h-100 py-2\">\n                        <div className=\"card-body\">\n                            <div className=\"row no-gutters align-items-center\">\n                                <div className=\"col mr-2\">\n                                    <div className=\"text-xs font-weight-bold text-danger text-uppercase mb-1\">\n                                        Normal High\n                                    </div>\n                                    {isLoading &&\n                                        <div className=\"h5 mb-0 font-weight-bold text-gray-800\"><Skeleton width={100} /></div>\n                                    }\n                                    {!isLoading &&\n                                        <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{normals ? `${normals.high}℉` : \"\"}</div>\n                                    }\n                                </div>\n                                <div className=\"col-auto\">\n                                    <i className=\"fas fa-thermometer-three-quarters fa-2x\"></i>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Col>\n                <Col s={6} md={4} className=\"mb-2\">\n                    <div className=\"card border-left-danger shadow h-100 py-2\">\n                        <div className=\"card-body\">\n                            <div className=\"row no-gutters align-items-center\">\n                                <div className=\"col mr-2\">\n                                    <div className=\"text-xs font-weight-bold text-danger text-uppercase mb-1\">\n                                        Record High {records ? `(${records.highDate.getFullYear()})` : \"\"}\n                                    </div>\n                                    {isLoading &&\n                                        <div className=\"h5 mb-0 font-weight-bold text-gray-800\"><Skeleton width={100} /></div>\n                                    }\n                                    {!isLoading &&\n                                        <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{records ? `${records.highTemp}℉` : \"\"}</div>\n                                    }\n                                </div>\n                                <div className=\"col-auto\">\n                                    <i className=\"fas fa-temperature-hot fa-2x\"></i>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Col>\n                <Col s={6} md={4} className=\"mb-2\">\n                    <div className=\"card border-left-primary shadow h-100 py-2\">\n                        <div className=\"card-body\">\n                            <div className=\"row no-gutters align-items-center\">\n                                <div className=\"col mr-2\">\n                                    <div className=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">\n                                        Coldest High {records ? `(${records.coldDate.getFullYear()})` : \"\"}\n                                    </div>\n                                    {isLoading &&\n                                        <div className=\"h5 mb-0 font-weight-bold text-gray-800\"><Skeleton width={100} /></div>\n                                    }\n                                    {!isLoading &&\n                                        <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{records ? `${records.coldHigh}℉` : \"\"}</div>\n                                    }\n                                </div>\n                                <div className=\"col-auto\">\n                                    <i className=\"fas fa-temperature-up fa-2x\"></i>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Col>\n                <Col s={6} md={4} className=\"mb-2\">\n                    <div className=\"card border-left-primary shadow h-100 py-2\">\n                        <div className=\"card-body\">\n                            <div className=\"row no-gutters align-items-center\">\n                                <div className=\"col mr-2\">\n                                    <div className=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">\n                                        Normal Low\n                                    </div>\n                                    {isLoading &&\n                                        <div className=\"h5 mb-0 font-weight-bold text-gray-800\"><Skeleton width={100} /></div>\n                                    }\n                                    {!isLoading &&\n                                        <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{normals ? `${normals.low}℉` : \"\"}</div>\n                                    }\n                                </div>\n                                <div className=\"col-auto\">\n                                    <i className=\"fas fa-thermometer-quarter fa-2x\"></i>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Col>\n                <Col s={6} md={4} className=\"mb-2\">\n                    <div className=\"card border-left-primary shadow h-100 py-2\">\n                        <div className=\"card-body\">\n                            <div className=\"row no-gutters align-items-center\">\n                                <div className=\"col mr-2\">\n                                    <div className=\"text-xs font-weight-bold text-primary text-uppercase mb-1\">\n                                        Record Low {records ? `(${records.lowDate.getFullYear()})` : \"\" }\n                                    </div>\n                                    {isLoading &&\n                                        <div className=\"h5 mb-0 font-weight-bold text-gray-800\"><Skeleton width={100} /></div>\n                                    }\n                                    {!isLoading &&\n                                        <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{records ? `${records.lowTemp}℉` : \"\"}</div>\n                                    }\n                                </div>\n                                <div className=\"col-auto\">\n                                    <i className=\"fas fa-temperature-frigid fa-2x\"></i>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Col>\n                <Col s={6} md={4} className=\"mb-2\">\n                    <div className=\"card border-left-danger shadow h-100 py-2\">\n                        <div className=\"card-body\">\n                            <div className=\"row no-gutters align-items-center\">\n                                <div className=\"col mr-2\">\n                                    <div className=\"text-xs font-weight-bold text-danger text-uppercase mb-1\">\n                                        Warmest Low {records ? `(${records.warmDate.getFullYear()})` : \"\"}\n                                    </div>\n                                    {isLoading &&\n                                        <div className=\"h5 mb-0 font-weight-bold text-gray-800\"><Skeleton width={100} /></div>\n                                    }\n                                    {!isLoading &&\n                                        <div className=\"h5 mb-0 font-weight-bold text-gray-800\">{records ? `${records.warmLow}℉` : \"\"}</div>\n                                    }\n                                </div>\n                                <div className=\"col-auto\">\n                                    <i className=\"fas fa-temperature-down fa-2x \"></i>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Col>\n            </Row>\n            <Row>\n                <Col xs={12} className=\"mt-4\">\n                    <DailyRecords selectedStation={selectedStation ? selectedStation.value : null} selectedDate={selectedDate}/>\n                </Col>\n            </Row>\n\n        </>\n    )\n}\n\nexport default Home;","import Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction About() {\n    return (\n        <>\n            <Row>\n                <Col xs={12}>\n                    <h1 className=\"h3 mb-0 text-gray-800\">About</h1>\n                </Col>\n                <Col xs={12} className=\"mt-4\">\n                    <p>This website shows daily record high and low temperatures from weather stations across the United States. </p>\n                    <div className=\"mt-4\">\n                    <h3 className=\"text-gray-800\">Planned enhancements</h3>\n                        <ul>\n                            <li>Daily and monthly precipitation records</li>\n                            <li>Daily and monthly snow fall records</li>\n                            <li>Monthly temperature trends with departure from normals</li>\n                        </ul>\n                    </div>\n                </Col>\n                <Col xs={12} className=\"mt-4\">\n                    All the data for this site comes from the <a href=\"https://www.rcc-acis.org/aboutacis_overview.html\" target=\"_blank\" rel=\"nofollow noreferrer\">Regional Climate Centers - Applied Climate Information System</a> and the queries were built using <a href=\"https://xmacis.rcc-acis.org/\" target=\"_blank\" rel=\"nofollow noreferrer\">xmACIS2 Query Builder</a>.\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default About;","import React from \"react\";\nimport Navbar from 'react-bootstrap/Navbar';\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport {Link} from \"react-router-dom\";\n\nfunction TopNav() {\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n            <Container>\n                <Navbar.Brand href=\"/wx-web\">WX Records</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"me-auto\">\n                        <Link className=\"nav-link\" to=\"/wx-web\">Home</Link>\n                        <Link className=\"nav-link\" to=\"/wx-web/about\">About</Link>\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    )\n}\n\nexport default TopNav;","\nimport Home from \"./screens/Home\";\nimport About from \"./screens/About\";\nimport TopNav from \"./components/navigation/TopNav\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-loading-skeleton/dist/skeleton.css'\nimport \"./sb-admin-2.min.css\";\nimport './App.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { Routes, Route, Link } from \"react-router-dom\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TopNav />\n      <Container>\n        <Row>\n          <Col xs={12}>\n            <div id=\"content-wrapper\" className=\"d-flex flex-column\">\n              <Row>\n                <Col className=\"mt-4\">\n                  <Routes>\n                    <Route exact path=\"/wx-web\" element={<Home />} />\n                    <Route path=\"/wx-web/about\" element={<About />} />\n                    <Route path=\"*\" element={<Home />} />\n\n                  </Routes>\n                </Col>\n              </Row>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}